Guide to EXIT Analysis using CML


== Introduction ==

The purpose of EXIT analysis is to improve channel code design by characterizing 
the mutual information metrics at the input and output of a particular detector/decoder structure.

A discussion of the theory regarding EXIT analysis is found in
M.C. Valenti and X. Xiang, “Constellation shaping for bit-interleaved LDPC coded APSK,” IEEE Transactions on Communications
http://arxiv.org/pdf/1207.2215.pdf

For a particular source and receiver configuration and channel model, CML EXIT analysis generates
a-prior and extrinsic transfer curves for a specified variable and check node degree distribution.




== EXIT Simulation Steps ==

This section provides a conceptual overview of the steps required for EXIT simulation.

EXIT simulation requires a minimum of two CML records, one to generate the detector characteristic,
and one to generate the decoder characteristic.

The decoder characteristic takes the result of the detector record as input.


** Steps
1. Create and simulate a CML record to generate the detector characteristic for a particular source, receiver and channel.

2. Create and simulate a CML record to generate the decoder characteristic for a particular degree distribution.

3. Plot the results of the record generating the decoder characteristic.




== Example ==

This example performs EXIT analysis for a point-to-point system
applying QPSK over an AWGN channel.  Exact simulation steps are given,
followed by a description of the simulation parameters.


= Simulation Steps =
1. Start MATLAB and navigate to CML's root.

2. Initialize CML.
   >> CmlStartup

3. Generate the detector characteristic.
   >> CmlSimulate('ExitP2P', 1);

4. Generate the decoder characteristic.
   >> CmlSimulate('ExitP2P', 2);

5. Plot the decoder characteristic at a value of 0.5 dB.
   >> CmlPlot('ExitP2P', 2, 0.5);



= Description of Example Simulation Parameters =

The following simulation parameters configure modulation, channel,
and LDPC code.

** This record generates the detector characteristic.
record = 1;
sim_param(record).sim_type = 'exit';        % specifies EXIT simulation
sim_param(record).SNR = [0:0.5:10];         % Requested SNR range
sim_param(record).SNR_type = 'Eb/No in dB';
sim_param(record).framesize = 64800;        % Codeword size
sim_param(record).modulation = 'PSK';       % QPSK modulation
sim_param(record).mod_order = 4;
sim_param(record).channel = 'AWGN';         % AWGN channel
sim_param(record).bicm = 0;
sim_param(record).exit_param.exit_type = 'ldpc';
sim_param(record).exit_param.exit_phase = 'detector';  % detector characteristic
sim_param(record).exit_param.rate = 0.6;    % Channel code rate
sim_param(record).exit_param.requested_IA = 0:0.1:0.9;  % A-prior information passed to detector.



** This record generates the decoder characteristic.
record = 2;
sim_param(record).sim_type = 'exit';
sim_param(record).SNR = [0:0.5:10];
sim_param(record).SNR_type = 'Eb/No in dB';
sim_param(record).framesize = 64800;
sim_param(record).modulation = 'PSK';
sim_param(record).mod_order = 4;
sim_param(record).channel = 'AWGN';
sim_param(record).exit_param.exit_type = 'ldpc';
sim_param(record).exit_param.exit_phase = 'decoder';  % decoder characteristic
sim_param(record).exit_param.rate = 0.6;              % channel code rate
sim_param(record).exit_param.dv = [2 4 19];           % variable node degree distribution
sim_param(record).exit_param.dv_dist = [ 0.4 0.52 0.08 ];  % fraction of check nodes having each degree distribution
sim_param(record).exit_param.dc = 11;                 % check node degree
sim_param(record).exit_param.requested_IA = 0:0.1:0.9; % A-prior information passed to decoder.
sim_param(record).exit_param.det_scenario = 'ExitP2P';  % Scenario and record from which to read detector
sim_param(record).exit_param.det_record = 1;            %   characteristic  




=== CML Parameters ===

A listing of all CML parameters specific to EXIT simulation.


== sim_param ==

  sim_type                 String containing simulation type.

                           Set to 'exit' for EXIT analysis.


  exit_param.exit_type     String containing the receiver structure.

                           One of 'ldpc' or 'turbo'.

                           Currently 'ldpc' is supported.


  exit_param.exit_phase    String denoting the phase of exit simulation.

                           One of 'detector' or 'decoder'.

                           'detector' generates the detector characteristic.

                           'decoder' generates the decoder characteristic for a particular
                              detector characteristic.


  exit_param.rate          Channel code rate.


  exit_param.requested_IA  A-prior mutual information values assumed for computation of
                              extrinsic information at the detector.
    
                           Vector of real numbers from 0-1.
  

  exit_param.dv            Variable node degree distribution.
  
                           Vector of integers.


  exit_param.dv_dist       Proportion of variable nodes having each degree specified by dv.
             
                           Vector of rational numbers having same length as exit_param.dv.


  exit_param.dc            Check node degree.

                           One integer.
  

  exit_param.det_scenario  Under 'decoder' exit phase, specifies the scenario and record from which to load
  exit_param.det_record      the detector characteristic.




