#!/usr/bin/python
# csv2cml
# Script to convert spreadsheets to CML scenario files.
# 
# For an example spreadsheet, see 'example.ods'

#!/usr/bin/python
import csv
import sys
import os


# Read the fixed parameters of the CML record.
def read_fixed_parameters(reader):
    fixed_parameters = [[],[]]   # init data structure                             

    # Loop over spreadsheet rows until a space is encountered
    for row in reader:
        if row[1] == '':
            break
        fixed_parameters[0].append(row[1])
        fixed_parameters[1].append(row[2])        
    return fixed_parameters


# write scenario file header information
def write_header_info(header_info):

    base_name = header_info[0][1]
    scenario_file_name = base_name + '.m'
    writer = open(scenario_file_name,'w')

    ### header info##
    writer.write('% Determine CML root directory\n')
    writer.write('load( \'CmlHome.mat\' );\n')
    writer.write('% Determine where to store result files\n')
    writer.write('base_name = \'' + base_name + '\';\n')
    writer.write('if ispc\n')
    writer.write('data_directory = strcat(\'\\output\\\', base_name, \'\\\' );\n')
    writer.write('else\n')
    writer.write('data_directory = strcat(\'/output/\', base_name, \'/\' );\n')
    writer.write('end\n')
    writer.write('full_directory = strcat( cml_home, data_directory );\n')
    writer.write('if ~exist( full_directory, \'dir\' )\n')
    writer.write('mkdir( full_directory);\n')
    writer.write('end\n')
    ###############

    writer.close()



# read rows which specify varying CML scenario parameters
def read_varying_parameters(reader):

    parameter_names = []
    parameter_row = reader.next();   # read parameter names


    i=1
    end = len(parameter_row)
    while parameter_row[i] != '*':
        parameter_names.append(parameter_row[i])
        i = i+1


    num_parameters = len(parameter_names)


    parameter_values = [[],[]]
    j=0
    for row in reader:
        if row[0] == '*':
            break
        
        for i in range(1,1+num_parameters):
            parameter_values[j].append(row[i])
        parameter_values.append([])
        j = j+1


    # remove empty parameters
    parameter_values.remove([])
    parameter_values.remove([])


    parameter_array = [parameter_names, parameter_values]
    return parameter_array








def write_cml_records(header_info, fixed_parameters, varying_parameters, output_path):

    # Iterate over the varying parameters
    # For every iteration, write a record
    parameter_names = varying_parameters[0]
    parameter_values = varying_parameters[1]


    file_name = header_info[0][1] + '.m'
    full_path_to_file = os.path.join(output_path, file_name)

 
    writer = open(full_path_to_file,'a')

    writer.write('\n\n\n\n\n')

    # Loop over the varying records.
    for row in parameter_values:
        num_parameters = len(row)

        # Write the record parameter first
        row_string = 'record = ' + row[0] + ';\n'
        writer.write(row_string)

        for i in range(1, num_parameters-1):
            row_string = 'sim_param(record).' + parameter_names[i] + ' = ' + row[i] +';\n'
            writer.write(row_string)

        # The file name is always the last parameter
        # Write the save file name
        file_string = 'sim_param(record).filename = strcat( data_directory, \'' + row[num_parameters-1] + '\');\n'

        writer.write(file_string)


        # write fixed parameters
        num_parameters = len(fixed_parameters[0])
        for i in range(0,num_parameters):
            row_string = 'sim_param(record).' + fixed_parameters[0][i] + ' = ' + fixed_parameters[1][i] + ';\n'
            writer.write(row_string)
            
        writer.write('\n\n\n')

    writer.close()
    

# Read the header information for the CML record.
#  The header information is hard coded into this function in this version
#  
#  The next version should read the header information from a template file, a line at a time.
def read_header_info(reader):
    # 1. Base Name - 'localscenarios'
    #
    # 2. Experiment Name - katti_journal
    #
    # 3. File name


    header_parameters = [[],[]]
    # Loop over the rows, quit when a space is encountered.
    for row in reader:
        if row[1] == '':
            break

        header_parameters[0].append(row[1])
        header_parameters[0].append(row[2])
        
    return header_parameters





######## Begin main #########

# Read the CSV file
# Reader is an object which contains rows
# http://docs.python.org/library/csv.html#csv-fmt-params

# Get the CSV file name
csv_file = sys.argv[1]
reader = csv.reader(open(csv_file, 'rb'), delimiter=';')


# get the output path
output_path = sys.argv[2]

# 1. Read all text parameters into arrays (lists)
#   - Read fixed parameters into a list 'fixed_parameters' - DONE
#   - Read fixed parameter values into second list 'fixed_parameter_values' - DONE
#
#   - Read varying parameters into list 'varying_parameters' -DONE
#   - Read varying parameter values into list 'varying_parameter_values' -DONE
#


# 1. Read and write header information.
#
# 
#
# 
# 2. Write cml record file
#    - Pass arrays to writer function
#    - iterate over the varying_parameter values
#      - For every record
#        - Write fixed parameters
#        - write varying parameters




# Count the number of stars encountered
for count in range(1,4):

    
    b = reader.next()
    while b[0] != '*':
        #    print b
        b = reader.next()
       

    # First star.  Header stuff
    if count == 1:
        header_info = read_header_info(reader)
   
    # Read fixed parameters
    if count == 2:
        fixed_parameters = read_fixed_parameters(reader)

    if count == 3:
        varying_parameters = read_varying_parameters(reader)



# Data has been read. Write to CML record file.
write_header_info(header_info)
write_cml_records(header_info, fixed_parameters, varying_parameters, output_path)
