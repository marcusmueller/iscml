#!/bin/bash
### BEGIN INIT INFO                                                                                                 
# Provides:        pcs                                                                                              
# Required-Start:  
# Required-Stop:   
# Default-Start:   2 3 4 5                                                                                          
# Default-Stop:                                                                                                     
# Short-Description: Management script for pcs suite                                                                               
### END INIT INFO 


#####  Commands
#
#COMMAND      DESCRIPTION
#
#pcs start     clear all global queues
#              start task controllers, worker controllers, workers
#             
#
#
#pcs stop      stop all controllers and workers
#              save state of global queues
#
#
#
#pcs resume    restore state of global queues at time of last stop
#              start all controllers and workers
#
#
#pcs shutdown  allow tasks in global queue to complete
#              stop all controllers and workers
#
#####



##### Examples
#
#1. Start pcs with cleared queues.
#  > pcs start
#
#
#
#2. Stop pcs
#  > pcs stop
#
#
##3.  Stop pcs and then resume previous state.
#  > pcs stop
#  > pcs resume
#
#
#4. Stop pcs allowing global queues to empty.
#  > pcs shutdown
#
#####





### paths #########
# task and worker controllers
PATH_TC=/home/pcs/tc/ctc/src
PATH_WC=/home/pcs/tc/cwc/src

# short queues
PATH_SQI=/home/pcs/tc/queue/cluster/short/iq  # input queue
PATH_SQR=/home/pcs/tc/queue/cluster/short/rq  # running queue
PATH_SQO=/home/pcs/tc/queue/cluster/short/oq  # output queue

PATH_LQI=/home/pcs/tc/queue/cluster/long/iq   # input queue
PATH_LQR=/home/pcs/tc/queue/cluster/long/rq   # running queue
PATH_LQO=/home/pcs/tc/queue/cluster/long/oq   # output queue

#PATH_STATE=/state                       # subdir of queues where state is saved before shutdown
######################





# names for screen sessions
STC=stc    # short task controller 
LTC=ltc    # long task controller
SWC=swc    # short worker controller
LWC=lwc    # long worker controller
##########################

# configuration files
scfg='pcs_short_224.cfg'   # short queue
lcfg='pcs_long_224.cfg'    # long queue
#####################




#### functions

start_workers(){
screen -S $SWC -m -d matlab -r "cd $PATH_WC; startup_short; cwcobj.cSta"
screen -S $LWC -m -d matlab -r "cd $PATH_WC; startup_long; cwcobj.cSta"
}



stop_workers(){
screen -S $SWC -p 0 -X eval 'stuff "\003"'
screen -S $SWC -p 0 -X eval 'stuff "cwcobj.slay\015"'
sleep 3
}




manage_controllers(){
ss=$1

screen -S $STC -m -d matlab -r "cd $PATH_TC;tc_startup('$scfg','$ss')"
screen -S $LTC -m -d matlab -r "cd $PATH_TC;tc_startup('$lcfg','$ss')"
}




stop_screen_session(){
screen -S $1 -p 0 -X eval 'stuff $"\003"'

sleep $2
screen -S $1 -p 0 -X eval 'stuff "exit\015"'
screen -S $1 -p 0 -X eval 'stuff "exit\015"'
}



#####################





case $1 in

        start) #


	start_workers

        manage_controllers start 
                ;;



        stop)  # stop all workers and task controllers
# stop running workers
stop_workers

# stop screen sessions
stop_screen_session $SWC 1
stop_screen_session $LWC 1
stop_screen_session $STC 2
stop_screen_session $LTC 2



# call controllers with stop argument
manage_controllers stop
                ;;



        restart|force-reload) 
                $0 stop && sleep 5 && $0 start
                ;;






        resume)       # restore global queue state and restart

	start_workers

        manage_controllers resume
                ;;




        shutdown)  # allow queues to empty and stop system


         # stop task controllers
         stop_screen_session $STC 2
         stop_screen_session $LTC 2


         manage_controllers shutdown 
         # wait for global queues to empty

         while [ "$(ls -A  $PATH_SQI/*.mat)" ]
         do
	       sleep 2
         done


         while [ "$(ls -A  $PATH_SQR/*.mat)" ]
         do
	       sleep 2
         done

         while [ "$(ls -A  $PATH_SQO/*.mat)" ]
         do
	      sleep 2
         done




         while [ "$(ls -A  $PATH_LQI/*.mat)" ]
         do
	       sleep 2
         done

         while [ "$(ls -A  $PATH_LQR/*.mat)" ]
         do
	       sleep 2
         done

         while [ "$(ls -A  $PATH_LQO/*.mat)" ]
         do
	      sleep 2
         done
         # stop workers and worker controllers


         stop_workers
         stop_screen_session $SWC 1
         stop_screen_session $LWC 1
                ;;








        try-restart)
                if $0 status >/dev/null; then
                        $0 restart
                else
                        exit 0
                fi
                ;;






        *)
                echo "Usage: $0 {start|stop|restart|resume|shutdown}"
                exit 2
                ;;
esac








