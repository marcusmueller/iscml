#!/bin/bash
### BEGIN INIT INFO 
# Provides:        pcs    
# Required-Start:                                                                                                  
# Required-Stop:                                                                                                   
# Default-Start:   2 3 4 5                                                                                         
# Default-Stop:                                                                                                    
# Short-Description: Management script for pcs suite                                                   
### END INIT INFO                                                                                                                                      


#     Copyright (C) 2012, Terry Ferrett and Matthew C. Valenti
#     For full copyright information see the bottom of this file.


#####  Commands                                                                                                    
#COMMAND      DESCRIPTION                                                                                          
#                                                                                                                  
#pcs start     clear all global queues                                                                             
#              start task controllers, worker controllers, workers                                                 
#                                     
#pcs stop      stop all controllers and workers                                                                    
#              save state of global queues                                                                         
#                                                                                                                                                     
#pcs resume    restore state of global queues at time of last stop                                                 
#              start all controllers and workers                                                                   
#
#pcs shutdown  allow tasks in global queue to complete                                                             
#              stop all controllers and workers                                                                    
#####    



### paths #########                                                                                                                                    
# task and worker controllers                                                                                                                          
PATH_TC=/home/pcs/tc/ctc/src
PATH_WC=/home/pcs/tc/cwc/src

# job managers
PATH_CML_JM=/home/pcs/jm/cml/src


# short queues                                                                                                                                         
PATH_SQI=/home/pcs/tc/queue/cluster/short/iq  # input queue                                                                                            
PATH_SQR=/home/pcs/tc/queue/cluster/short/rq  # running queue                                                                                          
PATH_SQO=/home/pcs/tc/queue/cluster/short/oq  # output queue                                                                                           

PATH_LQI=/home/pcs/tc/queue/cluster/long/iq   # input queue                                                                                            
PATH_LQR=/home/pcs/tc/queue/cluster/long/rq   # running queue                                                                                          
PATH_LQO=/home/pcs/tc/queue/cluster/long/oq   # output queue                                                                                           
######################                                                                                                                                 


# names for screen sessions                                                                                                                            
STC=stc       # short task controller                                                                                                                     
LTC=ltc       # long task controller                                                                                                                      
SWC=swc       # short worker controller                                                                                                                   
LWC=lwc       # long worker controller                                                                                

CML_JM=CmlJm  # CML job manager                                   
##########################                                                                                                                             


# configuration files                                                                                                                                  
scfg='pcs_short_224.cfg'   # short queue                                                                                                               
lcfg='pcs_long_224.cfg'    # long queue                                                                                                                
#####################                                                                                                                                  



# error messages
LOCKFILE_EXISTS_ERR="PCS is already running."
LOCKFILE_DOESNOTEXIST_ERR="PCS is not running.  Execute 'pcs {start|restart}' to start the service."
##########################


LOCKFILE=/home/pcs/tc/supp/lock/pcs_lock




#### functions                                                                                                                                    
start_job_managers(){
screen -S $CML_JM -m -d matlab -r "cd $PATH_CML_JM; cml_jm_startup"
}

     
start_workers(){
screen -S $SWC -m -d matlab -r "cd $PATH_WC; startup_short; cwcobj.cSta"
screen -S $LWC -m -d matlab -r "cd $PATH_WC; startup_long; cwcobj.cSta"
}


stop_screen_session(){
screen -ls |grep $1 | awk -F . '{print $1}' |xargs kill
}



stop_workers(){
screen -S $SWC -m -d matlab -r "cd $PATH_WC; startup_short"
sleep 5
screen -S $SWC -p 0 -X eval 'stuff "\003"'
screen -S $SWC -p 0 -X eval 'stuff "cwcobj.slay\015"'
sleep 3
stop_screen_session $SWC
}


manage_controllers(){
ss=$1

screen -S $STC -m -d matlab -r "cd $PATH_TC;tc_startup('$scfg','$ss')"
screen -S $LTC -m -d matlab -r "cd $PATH_TC;tc_startup('$lcfg','$ss')"
}


pidof_pcs() {
        # if there is a pcs process whose pid is in PIDFILE,                                                                              
        # print it and return 0.                                                                                                                        
        if [ -e "$PIDFILE" ]; then
                if pidof apache2 | tr ' ' '\n' | grep -w $(cat $PIDFILE); then
                        return 0
                fi
        fi
        return 1
}


wait_for_queue_to_empty(){
    while [ "$(ls -A  $1/*.mat 2>/dev/null)" ]
    do
        sleep 2
    done
       
}


does_lockfile_exist(){
    if [ -e $LOCKFILE ]; then
	echo "1"
    else
	echo "0"
    fi
}






lockfile_exists=$(does_lockfile_exist)

case $1 in
    start)
	if [ $lockfile_exists -eq 0 ]; then
	    start_workers
            manage_controllers start
	    start_job_managers
	    touch $LOCKFILE
	else
	    echo $LOCKFILE_EXISTS_ERR
	fi
	;; 

    restart)
        $0 stop && sleep 5 && $0 start
	;;

    resume)
	if [ $lockfile_exists -eq 0 ]; then
	    start_workers
	    manage_controllers resume
	    touch $LOCKFILE
	else
	    echo $LOCKFILE_EXISTS_ERR
	fi
	;;

    stop)
	if [ $lockfile_exists -eq 1 ]; then

	    stop_screen_session $SWC
	    stop_screen_session $LWC
	    stop_screen_session $STC
	    stop_screen_session $LTC
	    stop_screen_session $CML_JM

	    stop_workers
	    
	    manage_controllers stop

	    rm $LOCKFILE
	else
	    echo $LOCKFILE_DOESNOTEXIST_ERR
	fi
	;;

    shutdown)
	if [ $lockfile_exists -eq 1 ]; then
        stop_screen_session $STC
        stop_screen_session $LTC
	stop_screen_session $CML_JM
	
        manage_controllers shutdown
	
	wait_for_queue_to_empty $PATH_SQI
	wait_for_queue_to_empty $PATH_SQR
	wait_for_queue_to_empty $PATH_SQO
	wait_for_queue_to_empty $PATH_LQI
	wait_for_queue_to_empty $PATH_LQR
	wait_for_queue_to_empty $PATH_LQO
	

        stop_screen_session $SWC
        stop_screen_session $LWC
	
        stop_workers
	
	rm $LOCKFILE
	else
	    echo $LOCKFILE_DOESNOTEXIST_ERR
	fi
	;;

    *)
	echo "Usage: $0 {start|stop|restart|resume|shutdown}"
	exit 2
	;;
esac



