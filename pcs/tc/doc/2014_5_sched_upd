5/2014


 goal: implement fair scheduling for WCRL-PCS

== req ==

* - users executing tasks have equal opportunity to access cores

* - scalability to as many users as supported by Tomcat/underlying OS



== design ==

- compose new code

   - work through entire codebase and apply consistent formatting
     outline necessary sections

      formatting conventions
         - lines less than 80 chars
         - indenting consistent
         -   2 whitespace lines between functions/methods/properties
         -   1 whitespace line between beggining/end of functions/fors
         -   1 line between all lines of code
         -   2 lines between obvious "sections" of code
         -   arrays single dimensional unless otherwise noted


 



==== outline of fair scheduling implementation ====

-- main execution loop

- scan for users

- sort list of users alphabetically

- iterate over users
   poll for cores free

   determine if user has tasks to launch
    if no
      proceed to next user

    if yes
      begin launching tasks in proportion to users and cores
       if cores free runs out,
        save user and task launched count
        wait
    
   




== tests ==

 launch tc with no crash
   passed

 submit single task from single user
   passed

 submit many tasks from single user
   passed


 submit many tasks from two users
   roughly equal distribution of executing tasks

 submit many tasks from four users
   passed

 submit many tasks from fifteen users
    passed
   


- Create test task
  goal: launch tasks for many users simultaneously

  req
    jm to generate tasks
    task execution code


  JM              generate tasks
  entry function  code executed by tasks
  
    
